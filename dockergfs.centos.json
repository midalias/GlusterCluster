{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "sshPublicKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH public key for the Virtual Machines."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access _artifactsLocation"
      }
    },
    "projectName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of this project"
      }
    }
  },
  "variables": {
    "gfsNodesCount": 2,
    "adminUsername": "azureuser",
    "vmNameGFSNode": "gluster-node-",
    "vmClientPublic": "vm-public",
    "vmSize": "Standard_A2",
    "availabilitySetGFSNodes": "gluster-nodes-set",
    "osImagePublisher": "OpenLogic",
    "osImageOffer": "CentOS",
    "osImageSKU": "7.2",
    "managementPublicIPAddrName": "gluster-lb-nodes-ip",
    "clientPublicIPAddrName": "gluster-client-ip",
    "virtualNetworkName": "gfs-vnet",
    "subnetName": "gfs-subnet",
    "addressPrefix": "192.168.0.0/16",
    "subnetPrefix": "192.168.0.0/24",
    "subnetRef": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('subnetName'))]",
    "nsgName": "gfs-nsg",
    "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsgName'))]",
    "newStorageAccountName": "[toLower(concat('sa',resourceGroup().name))]",
    "clusterFqdn": "[concat('gfs-',uniqueString(resourceGroup().id, deployment().name))]",
    "storageAccountType": "Standard_LRS",
    "vhdBlobContainer": "vhds",
    "gfsNodesLbName": "gluster-lb-nodes",
    "gfsNodesLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('gfsNodesLbName'))]",
    "gfsNodesLbIPConfigName": "GFSNodesLBFrontEnd",
    "gfsNodesLbIPConfigID": "[concat(variables('gfsNodesLbID'),'/frontendIPConfigurations/', variables('gfsNodesLbIPConfigName'))]",
    "gfsNodesLbBackendPoolName": "gfs-nodes-pool",
    "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
    "cseScriptFolder": "[concat(parameters('projectName'), '/', 'CustomScripts')]",
    "vmClientCSEScriptFileName": "azuregfsClient.sh",
    "gfsNodeCSEScriptFileName": "azuregfs.sh",
    "gfsVolumeName" :  "gfs"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('newStorageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('availabilitySetGFSNodes')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('managementPublicIPAddrName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat(variables('clusterFqdn'), '-nodes')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('clientPublicIPAddrName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('clusterFqdn')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('nsgID')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[variables('nsgID')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('nsgName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }
          },
          {
            "name": "http",
            "properties": {
              "description": "",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmNameGFSNode'), copyIndex(), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoopMaster",
        "count": "[variables('gfsNodesCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('gfsNodesLbName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[concat('Microsoft.Network/loadBalancers/', variables('gfsNodesLbName'), '/inboundNatRules/',  'SSH-', variables('vmNameGFSNode'), copyIndex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigMaster",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat('192.168.0.', copyIndex(4))]",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(variables('gfsNodesLbID'), '/backendAddressPools/', variables('gfsNodesLbBackendPoolName'))]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('gfsNodesLbID'),'/inboundNatRules/SSH-',variables('vmNameGFSNode'),copyindex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[variables('gfsNodesLbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('managementPublicIPAddrName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('gfsNodesLbIPConfigName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('managementPublicIPAddrName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('gfsNodesLbBackendPoolName')]"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers/inboundNatRules",
      "name": "[concat(variables('gfsNodesLbName'), '/', 'SSH-', variables('vmNameGFSNode'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "lbNatLoopMaster",
        "count": "[variables('gfsNodesCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/loadBalancers/', variables('gfsNodesLbName'))]"
      ],
      "properties": {
        "frontendIPConfiguration": {
          "id": "[variables('gfsNodesLbIPConfigID')]"
        },
        "protocol": "tcp",
        "frontendPort": "[copyIndex(2200)]",
        "backendPort": 22,
        "enableFloatingIP": false
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmNameGFSNode'), copyIndex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "vmLoopMaster",
        "count": "[variables('gfsNodesCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmNameGFSNode'), copyIndex(), '-nic')]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('availabilitySetGFSNodes'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('availabilitySetGFSNodes'))]"
        },
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('vmNameGFSNode'), copyIndex())]",
          "adminUsername": "[variables('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmNameGFSNode'), copyIndex(),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/', variables('vhdBlobContainer'), '/gfsnode-', copyIndex(), '-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "createOption": "Empty",
              "lun": 0,
              "name": "datadisk1",
              "diskSizeGB": "100",
              "vhd": {
                "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/', variables('vhdBlobContainer'), '/gfsnode-', copyIndex(), '-datadisk.vhd')]"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmNameGFSNode'), copyIndex(), '-nic'))]"
            }
          ]
        }
      },
        "resources": [
            {
                "name": "vmNamesGFSNodeCSE",
                "type": "extensions",
                "location": "[resourceGroup().location]",
                "apiVersion": "2015-06-15",
                "dependsOn": [
                    "[concat('Microsoft.Compute/virtualMachines/', concat(variables('vmNameGFSNode'), copyIndex()))]"
                ],
                "tags": {
                    "displayName": "vmNamesGFSNodeCSE"
                },
                "properties": {
                    "publisher": "Microsoft.OSTCExtensions",
                    "type": "CustomScriptForLinux",
                    "typeHandlerVersion": "1.4",
                    "autoUpgradeMinorVersion": true,
                  "settings": {
                    "fileUris": [
                      "[concat(parameters('_artifactsLocation'), '/', variables('cseScriptFolder'), '/', variables('gfsNodeCSEScriptFileName'), parameters('_artifactsLocationSasToken'))]"
                    ],
                    "commandToExecute": "[concat('bash ', variables('gfsNodeCSEScriptFileName'), ' ',variables('vmNameGFSNode'), ' ', variables('gfsVolumeName'), ' ',copyindex(),' ',variables('gfsNodesCount'))]"
                  }
                }
            }
        ]
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('vmClientPublic'),'-nic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfigNode",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "192.168.0.10",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('clientPublicIPAddrName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmClientPublic')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('vmClientPublic'),'-nic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmClientPublic')]",
          "adminUsername": "[variables('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshPublicKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('osImagePublisher')]",
            "offer": "[variables('osImageOffer')]",
            "sku": "[variables('osImageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('vmClientPublic'),'-osdisk')]",
            "vhd": {
              "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/', variables('vhdBlobContainer'), '/pub-','-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmClientPublic'), '-nic'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "type": "extensions",
          "name": "vmClientDocker",
          "apiVersion": "2015-05-01-preview",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmClientPublic'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Azure.Extensions",
            "type": "DockerExtension",
            "typeHandlerVersion": "1.0",
            "autoUpgradeMinorVersion": true,
            "settings": { }
          }
        },
        {
          "name": "vmClientCSE",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmClientPublic'))]",
            "[concat('Microsoft.Compute/virtualMachines/', variables('vmNameGFSNode'),'1','/extensions/vmNamesGFSNodeCSE')]"
          ],
          "tags": {
            "displayName": "vmClientCSE"
          },
          "properties": {
            "publisher": "Microsoft.OSTCExtensions",
            "type": "CustomScriptForLinux",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), '/', variables('cseScriptFolder'), '/', variables('vmClientCSEScriptFileName'), parameters('_artifactsLocationSasToken'))]"
              ],
              "commandToExecute": "[concat('bash ', variables('vmClientCSEScriptFileName'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "clientPublicIP": {
      "type": "string",
      "value": "[reference(variables('clientPublicIPAddrName')).dnsSettings.fqdn]"
    },
    "gfsNodesLBPublicIP": {
      "type": "string",
      "value": "[reference(variables('managementPublicIPAddrName')).dnsSettings.fqdn]"
    }
  }
}
